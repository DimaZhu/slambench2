
IF(SuiteSparse_FOUND)
  SET(SuiteSparse_FIND_QUIETLY TRUE)
ENDIF(SuiteSparse_FOUND)

################ AMD ##################

FIND_PATH(AMD_INCLUDE_DIR NAMES amd.h
  PATHS
  ${SUITE_SPARSE_ROOT}/include
  NO_DEFAULT_PATH
  )

FIND_LIBRARY(AMD_LIBRARY NAMES libamd.a
  PATHS
  ${SUITE_SPARSE_ROOT}/lib
  NO_DEFAULT_PATH
  )


IF(AMD_INCLUDE_DIR AND AMD_LIBRARY)
  message(STATUS "Found AMD_INCLUDE_DIR: ${AMD_INCLUDE_DIR}")
  message(STATUS "Found AMD_LIBRARY:     ${AMD_LIBRARY}")
ENDIF(AMD_INCLUDE_DIR AND AMD_LIBRARY)




################ CAMD ##################

FIND_PATH(CAMD_INCLUDE_DIR NAMES camd.h
  PATHS
  ${SUITE_SPARSE_ROOT}/include
  NO_DEFAULT_PATH
  )

FIND_LIBRARY(CAMD_LIBRARY NAMES libcamd.a
  PATHS
  ${SUITE_SPARSE_ROOT}/lib
  NO_DEFAULT_PATH
  )


IF(CAMD_INCLUDE_DIR AND CAMD_LIBRARY)
  message(STATUS "Found CAMD_INCLUDE_DIR: ${CAMD_INCLUDE_DIR}")
  message(STATUS "Found CAMD_LIBRARY:     ${CAMD_LIBRARY}")
ENDIF(CAMD_INCLUDE_DIR AND CAMD_LIBRARY)


################ COLAMD ##################

FIND_PATH(COALMD_INCLUDE_DIR NAMES colamd.h
    PATHS
    ${SUITE_SPARSE_ROOT}/include
      NO_DEFAULT_PATH
  )

FIND_LIBRARY(COLAMD_LIBRARY NAMES libcolamd.a
     PATHS
     ${SUITE_SPARSE_ROOT}/lib
  NO_DEFAULT_PATH
     )


IF(COLAMD_INCLUDE_DIR AND COLAMD_LIBRARY)
  message(STATUS "Found COLAMD_INCLUDE_DIR: ${COLAMD_INCLUDE_DIR}")
  message(STATUS "Found COLAMD_LIBRARY:     ${COALMD_LIBRARY}")
ENDIF(COLAMD_INCLUDE_DIR AND COLAMD_LIBRARY)





################ SUITESPARSECONFIG ##################

FIND_LIBRARY(SUITESPARSECONFIG_LIBRARY NAMES libsuitesparseconfig.a
  PATHS
  ${SUITE_SPARSE_ROOT}/lib
  NO_DEFAULT_PATH
  )


# Look for csparse; note the difference in the directory specifications!
FIND_PATH(CSPARSE_INCLUDE_DIR NAMES cs.h
  PATHS
  ${SUITE_SPARSE_ROOT}/include
  NO_DEFAULT_PATH
  )

FIND_LIBRARY(CSPARSE_LIBRARY NAMES libcxsparse.a
  PATHS
  ${SUITE_SPARSE_ROOT}/lib
  NO_DEFAULT_PATH
  )

IF(CSPARSE_INCLUDE_DIR AND CSPARSE_LIBRARY AND SUITESPARSECONFIG_LIBRARY)
  message(STATUS "Found CSPARSE_INCLUDE_DIR: ${CSPARSE_INCLUDE_DIR}")
  message(STATUS "Found CSPARSE_LIBRARY:     ${CSPARSE_LIBRARY}")
  message(STATUS "Found SUITESPARSECONFIG_LIBRARY:     ${SUITESPARSECONFIG_LIBRARY}")
  SET(SuiteSparse_FOUND TRUE)
ELSE(CSPARSE_INCLUDE_DIR AND CSPARSE_LIBRARY AND SUITESPARSECONFIG_LIBRARY)
  SET(SuiteSparse_FOUND FALSE)
  if(SuiteSparse_FIND_REQUIRED AND NOT SuiteSparse_FIND_QUIETLY)
      message(FATAL_ERROR "Could not find SuiteSparse libary")
  endif(SuiteSparse_FIND_REQUIRED AND NOT SuiteSparse_FIND_QUIETLY)
ENDIF(CSPARSE_INCLUDE_DIR AND CSPARSE_LIBRARY AND SUITESPARSECONFIG_LIBRARY)

  


################ CHOLMOD ##################

FIND_PATH(CHOLMOD_INCLUDE_DIR NAMES cholmod.h
    PATHS
    ${SUITE_SPARSE_ROOT}/include
  NO_DEFAULT_PATH
    )

FIND_LIBRARY(CHOLMOD_LIBRARY NAMES libcholmod.a
     PATHS
     ${SUITE_SPARSE_ROOT}/lib
  NO_DEFAULT_PATH
   )

IF(CHOLMOD_INCLUDE_DIR AND CHOLMOD_LIBRARY)
 message(STATUS "Found CHOLMOD_INCLUDE_DIR: ${CHOLMOD_INCLUDE_DIR}")
 message(STATUS "Found CHOLMOD_LIBRARY: ${CHOLMOD_LIBRARY}")
ENDIF(CHOLMOD_INCLUDE_DIR AND CHOLMOD_LIBRARY)

find_package(BLAS REQUIRED)
find_package(LAPACK REQUIRED)

SET(CHOLMOD_LIBRARIES ${CHOLMOD_LIBRARY} ${AMD_LIBRARY} ${COLAMD_LIBRARY} ${CSPARSE_LIBRARY} ${SUITESPARSECONFIG_LIBRARY} ${BLA_STATIC}  ${LAPACK_LIBRARIES})
